---
# pass env secrets - doppler
x-doppler: &doppler-env
  environment:
  {{- range $key, $value := . }}
      {{$key}}: "{{$value}}"
  {{- end }}

# Run app + dependent services
services:
  backend:
    <<: *doppler-env            ## injects doppler secrets
    image: note-app:backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command:
      - ./main
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://backend:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    <<: *doppler-env            ## injects doppler secrets
    image: note-app:frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8181:8181
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://frontend:8181/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    <<: *doppler-env            ## injects doppler secrets
    image: postgres:alpine
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  db_data:
